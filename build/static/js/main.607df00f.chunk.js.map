{"version":3,"sources":["components/NavBar.js","components/PostCard.js","components/AddPostButton.js","components/AddPostModal.js","config/config.js","lib/axios.js","views/PostView.js","components/MyPostCard.js","views/MyPostView.js","views/LoginView.js","views/RegisterView.js","views/RootView.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","handleLogoutClick","localStorage","clear","window","location","handleMyPostsClick","getItem","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","onClick","this","Component","PostCard","align","user","format","date","title","src","image","alt","class","width","height","description","viewLikes","postId","likes","handleLikePost","data-placement","AddPostButton","AddPostModal","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","placeholder","onChange","handleTitleChange","handleDescriptionChange","name","accept","handleFileChange","onCancel","onConfirm","require","config","apiURL","process","callAPI","method","url","options","token","axiosConfig","baseURL","headers","Authorization","axios","PostView","getAllPosts","a","results","currentState","state","posts","data","message","setState","toast","error","handleDeletePost","success","handleUpdatePostClick","filteredPosts","filter","post","_id","selectedPost","alert","username","result","likedUsersList","_renderPostCards","length","map","idx","key","owner","createdAt","posttitle","postcontent","postimageid","e","target","value","file","files","handleCancel","handleUpdate","formData","FormData","append","MyPostCard","MyPostView","console","log","LoginView","handleLoginClick","password","response","setItem","jwttoken","style","fontSize","marginLeft","marginRight","RegisterView","handleRegisterClick","email","RootView","path","exact","component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"oRAGqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,kBAAoB,WAChBC,aAAaC,QACbC,OAAOC,SAAW,YATH,EAWnBC,mBAAqB,WACjBF,OAAOC,SAAW,cAVbH,aAAaK,QAAQ,WACtBH,OAAOC,SAAW,YAHP,E,qDAef,OACI,yBAAKG,UAAU,2DACX,4BACIA,UAAU,iBACVC,KAAK,SACLC,cAAY,WACZC,cAAY,uBACZC,gBAAc,sBACdC,gBAAc,QACdC,aAAW,qBACX,0BAAMN,UAAU,yBAEpB,yBACIA,UAAU,2BACVO,GAAG,uBACH,4BAAQP,UAAU,2BACd,kBAAC,IAAD,CAAMQ,GAAG,KAAI,uCAEjB,wBAAIR,UAAU,uBACd,wBAAIA,UAAU,4BACV,wBAAIA,UAAU,mBACV,4BACIA,UAAU,0BACVS,QAASC,KAAKZ,oBAFlB,cAOR,4BACIE,UAAU,0BACVS,QAASC,KAAKjB,mBAFlB,gB,GA5CgBkB,a,iBCyErBC,MAxEf,SAAkBpB,GACd,OACI,yBAAKQ,UAAU,yBAAwB,6BACnC,yBAAKa,MAAM,UAAUrB,EAAMsB,KAA3B,cAA2C,kBAAC,IAAD,CAAQC,OAAO,cAAcvB,EAAMwB,OAC9E,yBAAKhB,UAAU,aACX,wBAAIA,UAAU,+BACTR,EAAMyB,OAWX,6BACA,yBAAKC,IAAG,8CAAyC1B,EAAM2B,MAA/C,QAA4DC,IAAI,mBAAmBC,MAAM,cAAcC,MAAM,MAAMC,OAAO,QAClI,uBAAGvB,UAAU,aAAaR,EAAMgC,aAChC,4BAAQxB,UAAU,cACdE,cAAY,QACZC,cAAY,iBAEZc,MAAM,aACNR,QAAS,kBACLjB,EAAMiC,UAAUjC,EAAMkC,UACvBlC,EAAMmC,MAPb,aAqBA,yBAAK3B,UAAU,OACX,yBAAKA,UAAU,SASX,yBAAKA,UAAU,cACX,uBAAGqB,MAAM,8BACLZ,QAAS,kBACLjB,EAAMoC,eAAepC,EAAMkC,OAAQhC,aAAaK,QAAQ,UAC1DG,cAAY,UACd2B,iBAAe,SACfZ,MAAM,gBC/CvBa,MAZf,SAAuBtC,GACnB,OACI,yBAAUA,EACN,4BACIQ,UAAU,mEACVS,QAASjB,EAAMiB,SACf,uBAAGT,UAAU,oBAHjB,eC0EG+B,MA7Ef,SAAsBvC,GAClB,OACI,yBACIQ,UAAU,aACVO,GAAG,eACHyB,SAAS,KACTC,KAAK,SACLC,kBAAgB,eAChBC,cAAY,QACZ,yBAAKnC,UAAU,eAAeiC,KAAK,YAC/B,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cAAcO,GAAG,qBAA/B,gBAGA,4BACIN,KAAK,SACLD,UAAU,QACVoC,eAAa,QACb9B,aAAW,SACX,0BAAM6B,cAAY,QAAlB,UAGR,yBAAKnC,UAAU,cACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,QAAjB,SACA,2BACIC,KAAK,OACLD,UAAU,eACVqC,YAAY,0BACZC,SAAU9C,EAAM+C,qBAGxB,yBAAKvC,UAAU,cACX,2BAAOA,UAAU,QAAjB,WACA,8BACIA,UAAU,eACVqC,YAAY,4BACZC,SAAU9C,EAAMgD,2BAGxB,6BAGI,2BAAOxC,UAAU,QAAjB,QAAoC,6BACpC,2BAAOC,KAAK,OACRwC,KAAK,OACLC,OAAO,wBAAwBJ,SAAU9C,EAAMmD,qBAS3D,yBAAK3C,UAAU,gBACX,4BACIC,KAAK,SACLD,UAAU,oBACVoC,eAAa,QACb3B,QAASjB,EAAMoD,UAJnB,UAOA,4BACI3C,KAAK,SACLD,UAAU,kBACVS,QAASjB,EAAMqD,WAHnB,gB,yBCjETC,EAAQ,IAChBC,SAEP,IAIeA,EAJA,CACXC,OAAQC,0BCcGC,MAhBf,SAAiBC,EAAQC,EAAKC,GAC1B,IAAIC,EAAQ5D,aAAaK,QAAQ,SAC3BwD,EAAW,aACbH,MACAD,SACAK,QAAST,EAAOC,OAChBS,QAAS,CACLC,cAAc,UAAD,OAAYJ,KAE1BD,GAIP,OAAOM,IAAMJ,I,OC4TFK,E,kDAlUX,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IAaVqE,YAdmB,sBAcL,gCAAAC,EAAA,+EAEgBZ,EAAQ,MAAO,UAF/B,OAEAa,EAFA,yBAGSC,EAHT,EAGEC,OACKC,MAAQH,EAAQI,KAAKC,QAClC,EAAKC,SAASL,GALR,gDAONM,IAAMC,MAAM,+BAPN,yDAdK,EAwBnBC,iBAxBmB,uCAwBA,WAAO9C,GAAP,SAAAoC,EAAA,+EAELZ,EAAQ,SAAD,gBAAoBxB,IAFtB,OAGX,EAAKmC,cACLS,IAAMG,QAAQ,gBAJH,gDAMXH,IAAMC,MAAM,0BAND,yDAxBA,wDAkCnBG,sBAAwB,SAAChD,GAAY,IAClBsC,EADiB,eACxBC,MACFU,EAAgBX,EAAaE,MAAMU,QAAO,SAACC,GAC7C,OAAOA,EAAKC,MAAQpD,KAExBsC,EAAae,aAAeJ,EAAc,GAC1C,EAAKN,SAASL,IAxCC,EA0CnBpC,eA1CmB,uCA0CF,WAAOF,EAAQe,GAAf,SAAAqB,EAAA,yDACE,KAAXpC,GAA0B,KAATe,EADR,gBAETuC,MAAM,mDAFG,gDAKkB9B,EAAQ,MAAO,aAAc,CAChDiB,KAAM,CACF5D,GAAImB,EACJuD,SAAUxC,KARb,cAWL,EAAKoB,cACLS,IAAMG,QAAQ,SAZT,kDAeLH,IAAMC,MAAM,yBAfP,0DA1CE,0DA6DnB9C,UA7DmB,uCA6DP,WAAOC,GAAP,mBAAAoC,EAAA,yDACO,KAAXpC,EADI,gBAEJsD,MAAM,kCAFF,gDAKqB9B,EAAQ,MAAD,0BAA2BxB,IALvD,OAKMwD,EALN,yBAMelB,EANf,EAMQC,OACKkB,eAAiBD,EAAOf,KAAKC,QAC1C,EAAKC,SAASL,GARd,kDAYAM,IAAMC,MAAM,SAZZ,0DA7DO,wDA6EnBa,iBAAmB,WACf,IACI,OAAI,EAAKnB,MAAMC,MAAMmB,OAAS,EAEtB,yBAAKrF,UAAU,SAEV,EAAKiE,MAAMC,MAAMoB,KAAI,SAACT,EAAMU,GAAP,OAElB,yBACIvF,UAAU,wCACVwF,IAAKD,GAEL,kBAAC,EAAD,CACIzE,KAAM+D,EAAKY,MACXzE,KAAM6D,EAAKa,UACXzE,MAAO4D,EAAKc,UACZnE,YAAaqD,EAAKe,YAClBlE,OAAQmD,EAAKC,IACb3D,MAAO0D,EAAKgB,YACZlE,MAAOkD,EAAKlD,MACZC,eAAgB,EAAKA,eACrB4C,iBAAkB,EAAKA,iBACvBE,sBACI,EAAKA,sBAETjD,UAAW,EAAKA,YAClB,kCAOd,yBAAKzB,UAAU,eACX,wBAAIA,UAAU,eACV,uBAAGA,UAAU,kCADjB,aAOd,MAAOuE,GACL,OACI,yBAAKvE,UAAU,eACX,wBAAIA,UAAU,eACV,uBAAGA,UAAU,kCADjB,eAzHG,EAmInBuC,kBAAoB,SAACuD,GAAO,IACT9B,EADQ,eACfC,MACRD,EAAae,aAAaY,UAAYG,EAAEC,OAAOC,MAC/C,EAAK3B,SAASL,IAtIC,EAwInBxB,wBAA0B,SAACsD,GAAO,IACf9B,EADc,eACrBC,MACRD,EAAae,aAAaa,YAAcE,EAAEC,OAAOC,MACjD,EAAK3B,SAASL,IA3IC,EA6InBrB,iBAAmB,SAACmD,GAAO,IACR9B,EADO,eACdC,MACRD,EAAae,aAAakB,KAAOH,EAAEC,OAAOG,MAAM,GAChD,EAAK7B,SAASL,IAhJC,EAmJnBmC,aAAe,WACX,EAAKtC,eApJU,EAuJnBuC,aAvJmB,uCAuJJ,WAAO1E,GAAP,SAAAoC,EAAA,+EAEDZ,EAAQ,MAAO,QAAS,CAC1BiB,KACI,EAAKF,MAAMc,eAJZ,OAWPT,IAAMG,QAAQ,gBAXP,+CAaPH,IAAMC,MAAM,8BAbL,OAeX,EAAKV,cAfM,yDAvJI,wDAwKnBhB,UAxKmB,sBAwKP,4BAAAiB,EAAA,uEAEAuC,EAAW,IAAIC,UACVC,OAAO,OAAQ,EAAKtC,MAAMc,aAAakB,MAChDI,EAASE,OAAO,cAAe,EAAKtC,MAAMc,aAAaa,aACvDS,EAASE,OAAO,YAAa,EAAKtC,MAAMc,aAAaY,WALjD,SAMEzC,EAAQ,OAAQ,QAAS,CAC3BiB,KAAMkC,IAPN,OASJ/B,IAAMG,QAAQ,gBAEd,EAAKZ,cAXD,kDAaJS,IAAMC,MAAM,0BAbR,0DAtKR,EAAKN,MAAQ,CACTC,MAAO,GACPa,aAAc,GACdI,eAAgB,IAEfzF,aAAaK,QAAQ,WACtBH,OAAOC,SAAW,YARP,E,gEAYfa,KAAKmD,gB,+BA8KC,IAEEkB,EADUrE,KAAVuD,MACAc,aACR,OACI,6BAEI,kBAAC,EAAD,MACA,yBAAK/E,UAAU,OACX,kBAAC,IAAD,MAGA,yBACIA,UAAU,aACVO,GAAG,kBACHyB,SAAS,KACTC,KAAK,SACLC,kBAAgB,kBAChBC,cAAY,QACZ,yBAAKnC,UAAU,eAAeiC,KAAK,YAC/B,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBACIA,UAAU,cACVO,GAAG,wBAFP,qBAKA,4BACIN,KAAK,SACLD,UAAU,QACVoC,eAAa,QACb9B,aAAW,SACX,0BAAM6B,cAAY,QAAlB,UAGR,yBAAKnC,UAAU,cACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,QAAjB,SACA,2BACIC,KAAK,OACL+F,MAAOjB,EAAaY,UACpBrD,SAAU5B,KAAK6B,kBACfvC,UAAU,eACVqC,YAAY,6BAGpB,yBAAKrC,UAAU,cACX,2BAAOA,UAAU,QAAjB,WAGA,8BACIA,UAAU,eACVgG,MAAOjB,EAAaa,YACpBtD,SACI5B,KAAK8B,wBAETH,YAAY,gCAIxB,yBAAKrC,UAAU,gBACX,4BACIC,KAAK,SACLD,UAAU,oBACVoC,eAAa,QACb3B,QAASC,KAAKyF,cAJlB,UAOA,4BACIlG,KAAK,SACLD,UAAU,kBACVS,QAASC,KAAK0F,cAHlB,cAehB,yBACIpG,UAAU,aACVO,GAAG,gBACHyB,SAAS,KACTC,KAAK,SACLC,kBAAgB,kBAChBC,cAAY,QACZ,yBAAKnC,UAAU,eAAeiC,KAAK,YAC/B,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBACIA,UAAU,cACVO,GAAG,wBAFP,8BAKA,4BACIN,KAAK,SACLD,UAAU,QACVoC,eAAa,QACb9B,aAAW,SACX,0BAAM6B,cAAY,QAAlB,UAGR,yBAAKnC,UAAU,cACX,yBAAKA,UAAU,cAEVU,KAAKuD,MAAMkB,eAAeG,KAAI,SAACxE,EAAMyE,GAAP,OAC3B,6BACKzE,OAKb,yBAAKd,UAAU,gBACX,4BACIC,KAAK,SACLD,UAAU,oBACVoC,eAAa,QACb3B,QAASC,KAAKyF,cAJlB,cAanBzF,KAAK0E,yB,GA5THzE,a,MCqDR6F,MA1Df,SAAoBhH,GAChB,OACI,yBAAKQ,UAAU,yBAAwB,6BAGnC,yBAAKa,MAAM,UAAUrB,EAAMsB,KAA3B,cAA2C,kBAAC,IAAD,CAAQC,OAAO,cAAcvB,EAAMwB,OAC9E,yBAAKhB,UAAU,aACX,wBAAIA,UAAU,+BACTR,EAAMyB,MAEP,uBAEIjB,UAAU,mDACVE,cAAY,QACZC,cAAY,mBACZM,QAAS,WACLjB,EAAMkF,sBAAsBlF,EAAMkC,WAG1C,uBAAG1B,UAAU,yCAAyCS,QAAS,kBAC3DjB,EAAMgF,iBAAiBhF,EAAMkC,SAE7BxB,cAAY,UACZ2B,iBAAe,SACfZ,MAAM,iBAEd,6BACA,yBAAKC,IAAG,8CAAyC1B,EAAM2B,MAA/C,QAA4DC,IAAI,mBAAmBC,MAAM,cAAcC,MAAM,MAAMC,OAAO,QAClI,uBAAGvB,UAAU,aAAaR,EAAMgC,aAChC,4BAAQxB,UAAU,cACdE,cAAY,QACZC,cAAY,iBACZM,QAAS,kBACLjB,EAAMiC,UAAUjC,EAAMkC,UACvBlC,EAAMmC,MALb,aAQA,yBAAK3B,UAAU,OACX,yBAAKA,UAAU,SAEX,yBAAKA,UAAU,cACX,uBAAGqB,MAAM,8BACLZ,QAAS,kBACLjB,EAAMoC,eAAepC,EAAMkC,OAAQhC,aAAaK,QAAQ,UAC1DG,cAAY,UACd2B,iBAAe,SACfZ,MAAM,gBC8SvBwF,E,kDArVX,WAAYjH,GAAQ,IAAD,8BACf,cAAMA,IAcVqE,YAfmB,sBAeL,kCAAAC,EAAA,sEAEArB,EAAO/C,aAAaK,QAAQ,QAF5B,SAGgBmD,EAAQ,MAAD,gBAAiBT,IAHxC,OAGAsB,EAHA,yBAISC,EAJT,EAIEC,OACKC,MAAQH,EAAQI,KAAKC,QAClCJ,EAAahD,KAAO+C,EAAQI,KAAKC,QAAQsB,UACzC,EAAKrB,SAASL,GACd0C,QAAQC,IAAI5C,EAAQI,KAAKC,SARnB,4GAfK,EA4BnBI,iBA5BmB,uCA4BA,WAAO9C,GAAP,SAAAoC,EAAA,+EAELZ,EAAQ,SAAD,gBAAoBxB,IAFtB,OAGX,EAAKmC,cACLS,IAAMG,QAAQ,gBAJH,gDAMXH,IAAMC,MAAM,0BAND,yDA5BA,wDAsCnBG,sBAAwB,SAAChD,GAAY,IAClBsC,EADiB,eACxBC,MACFU,EAAgBX,EAAaE,MAAMU,QAAO,SAACC,GAC7C,OAAOA,EAAKC,MAAQpD,KAExBsC,EAAae,aAAeJ,EAAc,GAC1C,EAAKN,SAASL,IA5CC,EA8CnBpC,eA9CmB,uCA8CF,WAAOF,EAAQe,GAAf,SAAAqB,EAAA,yDACE,KAAXpC,GAA0B,KAATe,EADR,gBAETuC,MAAM,mDAFG,gDAKkB9B,EAAQ,MAAO,aAAc,CAChDiB,KAAM,CACF5D,GAAImB,EACJuD,SAAUxC,KARb,cAWL,EAAKoB,cACLS,IAAMG,QAAQ,SAZT,kDAeLH,IAAMC,MAAM,yBAfP,0DA9CE,0DAiEnB9C,UAjEmB,uCAiEP,WAAOC,GAAP,mBAAAoC,EAAA,yDACO,KAAXpC,EADI,gBAEJsD,MAAM,kCAFF,gDAKqB9B,EAAQ,MAAD,0BAA2BxB,IALvD,OAKMwD,EALN,yBAMelB,EANf,EAMQC,OACKkB,eAAiBD,EAAOf,KAAKC,QAC1C,EAAKC,SAASL,GARd,kDAYAM,IAAMC,MAAM,SAZZ,0DAjEO,wDAiFnBa,iBAAmB,WACf,IACI,OAAI,EAAKnB,MAAMC,MAAMmB,OAAS,EAEtB,yBAAKrF,UAAU,SAEV,EAAKiE,MAAMC,MAAMoB,KAAI,SAACT,EAAMU,GAAP,OAElB,yBACIvF,UAAU,wCACVwF,IAAKD,GAEL,kBAAC,EAAD,CACIzE,KAAM+D,EAAKY,MACXzE,KAAM6D,EAAKa,UACXzE,MAAO4D,EAAKc,UACZnE,YAAaqD,EAAKe,YAClBlE,OAAQmD,EAAKC,IACb3D,MAAO0D,EAAKgB,YACZlE,MAAOkD,EAAKlD,MACZC,eAAgB,EAAKA,eACrB4C,iBAAkB,EAAKA,iBACvBE,sBACI,EAAKA,sBAETjD,UAAW,EAAKA,YAClB,kCAQd,yBAAKzB,UAAU,eACX,wBAAIA,UAAU,eACV,uBAAGA,UAAU,kCADjB,aAQhB,MAAOuE,GACH,OACI,yBAAKvE,UAAU,eACX,wBAAIA,UAAU,eACV,uBAAGA,UAAU,kCADjB,6BA/HG,EAyInBuC,kBAAoB,SAACuD,GAAO,IACT9B,EADQ,eACfC,MACRD,EAAae,aAAaY,UAAYG,EAAEC,OAAOC,MAC/C,EAAK3B,SAASL,IA5IC,EA8InBxB,wBAA0B,SAACsD,GAAO,IACf9B,EADc,eACrBC,MACRD,EAAae,aAAaa,YAAcE,EAAEC,OAAOC,MACjD,EAAK3B,SAASL,IAjJC,EAmJnBrB,iBAAmB,SAACmD,GAAO,IACR9B,EADO,eACdC,MACRD,EAAae,aAAakB,KAAOH,EAAEC,OAAOG,MAAM,GAChD,EAAK7B,SAASL,IAtJC,EAyJnBmC,aAAe,WACX,EAAKtC,eA1JU,EA6JnBuC,aA7JmB,uCA6JJ,WAAO1E,GAAP,SAAAoC,EAAA,+EAEDZ,EAAQ,MAAO,QAAS,CAC1BiB,KACI,EAAKF,MAAMc,eAJZ,OAWPT,IAAMG,QAAQ,gBAXP,+CAaPH,IAAMC,MAAM,8BAbL,OAeX,EAAKV,cAfM,yDA7JI,wDA8KnBhB,UA9KmB,sBA8KP,4BAAAiB,EAAA,uEAEAuC,EAAW,IAAIC,UACVC,OAAO,OAAQ,EAAKtC,MAAMc,aAAakB,MAChDI,EAASE,OAAO,WAAY7G,aAAaK,QAAQ,SACjDsG,EAASE,OAAO,cAAe,EAAKtC,MAAMc,aAAaa,aACvDS,EAASE,OAAO,YAAa,EAAKtC,MAAMc,aAAaY,WANjD,SAOEzC,EAAQ,OAAQ,QAAS,CAC3BiB,KAAMkC,IARN,OAUJ/B,IAAMG,QAAQ,gBAEd,EAAKZ,cAZD,kDAcJS,IAAMC,MAAM,0BAdR,0DA5KR,EAAKN,MAAQ,CACTC,MAAO,GACPa,aAAc,GACdI,eAAgB,GAChBnE,KAAM,IAELtB,aAAaK,QAAQ,WACtBH,OAAOC,SAAW,YATP,E,gEAafa,KAAKmD,gB,+BAoLC,IAEEkB,EADUrE,KAAVuD,MACAc,aACR,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK/E,UAAU,qEACX,kBAAC,EAAD,CACIE,cAAY,QACZC,cAAY,mBAGpB,yBAAKH,UAAU,OACX,kBAAC,IAAD,MAEA,kBAAC,EAAD,CACI6C,UAAWnC,KAAKmC,UAChBD,SAAUlC,KAAKyF,aACf5D,kBAAmB7B,KAAK6B,kBACxBC,wBAAyB9B,KAAK8B,wBAC9BG,iBAAkBjC,KAAKiC,mBAG3B,yBACI3C,UAAU,aACVO,GAAG,kBACHyB,SAAS,KACTC,KAAK,SACLC,kBAAgB,kBAChBC,cAAY,QACZ,yBAAKnC,UAAU,eAAeiC,KAAK,YAC/B,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBACIA,UAAU,cACVO,GAAG,wBAFP,qBAKA,4BACIN,KAAK,SACLD,UAAU,QACVoC,eAAa,QACb9B,aAAW,SACX,0BAAM6B,cAAY,QAAlB,UAGR,yBAAKnC,UAAU,cACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,QAAjB,SACA,2BACIC,KAAK,OACL+F,MAAOjB,EAAaY,UACpBrD,SAAU5B,KAAK6B,kBACfvC,UAAU,eACVqC,YAAY,6BAGpB,yBAAKrC,UAAU,cACX,2BAAOA,UAAU,QAAjB,WAGA,8BACIA,UAAU,eACVgG,MAAOjB,EAAaa,YACpBtD,SACI5B,KAAK8B,wBAETH,YAAY,gCAIxB,yBAAKrC,UAAU,gBACX,4BACIC,KAAK,SACLD,UAAU,oBACVoC,eAAa,QACb3B,QAASC,KAAKyF,cAJlB,UAOA,4BACIlG,KAAK,SACLD,UAAU,kBACVS,QAASC,KAAK0F,cAHlB,cAehB,yBACIpG,UAAU,aACVO,GAAG,gBACHyB,SAAS,KACTC,KAAK,SACLC,kBAAgB,kBAChBC,cAAY,QACZ,yBAAKnC,UAAU,eAAeiC,KAAK,YAC/B,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBACIA,UAAU,cACVO,GAAG,wBAFP,8BAKA,4BACIN,KAAK,SACLD,UAAU,QACVoC,eAAa,QACb9B,aAAW,SACX,0BAAM6B,cAAY,QAAlB,UAGR,yBAAKnC,UAAU,cACX,yBAAKA,UAAU,cAEVU,KAAKuD,MAAMkB,eAAeG,KAAI,SAACxE,EAAMyE,GAAP,OAC3B,6BACKzE,OAKb,yBAAKd,UAAU,gBACX,4BACIC,KAAK,SACLD,UAAU,oBACVoC,eAAa,QACb3B,QAASC,KAAKyF,cAJlB,cAanBzF,KAAK0E,yB,GA/UDzE,aCNJiG,E,kDACjB,WAAYpH,GAAQ,IAAD,8BACf,cAAMA,IAOVqH,iBARmB,sBAQA,kCAAA/C,EAAA,2DACgB,EAAKG,MAA5BgB,EADO,EACPA,SAAU6B,EADH,EACGA,SACD,KAAb7B,GAAgC,KAAb6B,EAFR,gBAGX9B,MAAM,mDAHK,gDAMgB9B,EAAQ,OAAQ,cAAe,CAClDiB,KAAM,CACF1B,KAAMwC,EACN6B,cATD,OAMDC,EANC,OAYPL,QAAQC,IAAII,GACZrH,aAAasH,QAAQ,QAASD,EAAS5C,KAAK8C,UAC5CvH,aAAasH,QAAQ,OAAQD,EAAS5C,KAAK1B,MAC3C7C,OAAOC,SAAW,MAfX,kDAiBP6G,QAAQC,IAAI,SAjBL,0DANf,EAAK1C,MAAQ,CACTgB,SAAU,GACV6B,SAAU,IAJC,E,qDA8BT,IAAD,OACL,OACI,yBAAK9G,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAAf,eACA,yBAAKA,UAAU,aAAf,WACA,2EACA,yBAAKkH,MAAO,CAAEC,SAAU,IAAMnH,UAAU,QACpC,yBAAKkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACxC,2BACIrH,UAAU,+CACVqC,YAAY,sBACZC,SAAU,SAACwD,GAAO,IACC9B,EAAiB,EAAxBC,MACRD,EAAaiB,SAAWa,EAAEC,OAAOC,MACjC,EAAK3B,SAASL,OAG1B,yBACIhE,UAAU,OACVkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACvC,2BACIpH,KAAK,WACLD,UAAU,+CACVqC,YAAY,WACZC,SAAU,SAACwD,GAAO,IACC9B,EAAiB,EAAxBC,MACRD,EAAa8C,SAAWhB,EAAEC,OAAOC,MACjC,EAAK3B,SAASL,OAG1B,yBACIhE,UAAU,eACVkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACvC,4BACIrH,UAAU,wBACVS,QAASC,KAAKmG,kBAFlB,SAKA,kBAAC,IAAD,CAAMrG,GAAG,YAAYR,UAAU,cAA/B,yC,GAtEWW,aCAlB2G,E,kDACjB,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IASV+H,oBAVmB,sBAUG,sCAAAzD,EAAA,2DAC0B,EAAKG,MAAzCgB,EADU,EACVA,SAAU6B,EADA,EACAA,SAAUU,EADV,EACUA,MAAOvB,EADjB,EACiBA,KAElB,KAAbhB,GAAgC,KAAb6B,GAA6B,KAAVU,EAHxB,gBAIdxC,MAAM,mDAJQ,wCAONqB,EAAW,IAAIC,UACVC,OAAO,OAAQN,GACxBI,EAASE,OAAO,OAAQtB,GACxBoB,EAASE,OAAO,WAAYO,GAC5BT,EAASE,OAAO,QAASiB,GAXf,UAYJtE,EAAQ,OAAQ,QAAS,CAC3BiB,KAAMkC,IAbA,QAeVrB,MAAM,oBAfI,kDAiBVA,MAAM,oBACN0B,QAAQC,IAAI,SAlBF,0DARlB,EAAK1C,MAAQ,CACTgB,SAAU,GACV6B,SAAU,GACVU,MAAO,GACPvB,KAAM,MANK,E,qDAiCT,IAAD,OACL,OACI,yBAAKjG,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAAf,kBACA,yBAAKA,UAAU,aAAf,YACA,2EACA,yBAAKkH,MAAO,CAAEC,SAAU,IAAMnH,UAAU,QACpC,yBAAKkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACxC,2BACIrH,UAAU,+CACVqC,YAAY,sBACZC,SAAU,SAACwD,GAAO,IACC9B,EAAiB,EAAxBC,MACRD,EAAaiB,SAAWa,EAAEC,OAAOC,MACjC,EAAK3B,SAASL,OAG1B,yBACIhE,UAAU,OACVkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACvC,2BACIpH,KAAK,WACLD,UAAU,+CACVqC,YAAY,WACZC,SAAU,SAACwD,GAAO,IACC9B,EAAiB,EAAxBC,MACRD,EAAa8C,SAAWhB,EAAEC,OAAOC,MACjC,EAAK3B,SAASL,OAG1B,yBACIhE,UAAU,OACVkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACvC,2BACIpH,KAAK,QACLD,UAAU,+CACVqC,YAAY,eACZC,SAAU,SAACwD,GAAO,IACC9B,EAAiB,EAAxBC,MACRD,EAAawD,MAAQ1B,EAAEC,OAAOC,MAC9B,EAAK3B,SAASL,OAG1B,yBACIhE,UAAU,OACVkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACvC,2BAAOpH,KAAK,OACRwC,KAAK,OACLC,OAAO,wBAAwBJ,SAAU,SAACwD,GAAO,IAC9B9B,EAAiB,EAAxBC,MACRD,EAAaiC,KAAOH,EAAEC,OAAOG,MAAM,GACnC,EAAK7B,SAASL,OAG1B,yBACIhE,UAAU,eACVkH,MAAO,CAAEE,WAAY,IAAKC,YAAa,MACvC,4BACIrH,UAAU,wBACVS,QAASC,KAAK6G,qBAFlB,WAKA,kBAAC,IAAD,CAAM/G,GAAG,SAASR,UAAU,cAA5B,iB,GAjGcW,aCgB3B8G,E,uKAXP,OACI,yBAAKzH,UAAU,WACX,kBAAC,IAAD,CAAO0H,KAAK,SAASC,OAAK,EAACC,UAAWhB,IACtC,kBAAC,IAAD,CAAOc,KAAK,YAAYC,OAAK,EAACC,UAAWN,IACzC,kBAAC,IAAD,CAAOI,KAAK,WAAWC,OAAK,EAACC,UAAWnB,IACxC,kBAAC,IAAD,CAAOiB,KAAK,IAAIC,OAAK,EAACC,UAAWhE,S,GAP1BjD,aCORkH,MARf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,KAAK,IAAIE,UAAWH,MCGbK,QACW,cAA7BlI,OAAOC,SAASkI,UAEe,UAA7BnI,OAAOC,SAASkI,UAEhBnI,OAAOC,SAASkI,SAASC,MACvB,2D,YCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApE,GACLmC,QAAQnC,MAAMA,EAAMH,c","file":"static/js/main.607df00f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NavBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        if (!localStorage.getItem('token')) {\r\n            window.location = '/#/login'\r\n        }\r\n    }\r\n\r\n    handleLogoutClick = () => {\r\n        localStorage.clear()\r\n        window.location = '/#/login'\r\n    }\r\n    handleMyPostsClick = () => {\r\n        window.location = '/#/myposts'\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-bg-light navbar-bg fixed\">\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarTogglerDemo01\"\r\n                    aria-controls=\"navbarTogglerDemo01\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div\r\n                    className=\"collapse navbar-collapse\"\r\n                    id=\"navbarTogglerDemo01\">\r\n                    <button className=\"btn btn-link text-white\">\r\n                        <Link to=\"/\"><h6>FEEDS</h6></Link>\r\n                    </button>\r\n                    <ul className=\"navbar-nav mr-auto\" />\r\n                    <ul className=\"navbar-nav mt-2 mt-lg-0 \">\r\n                        <li className=\"nav-item active\">\r\n                            <button\r\n                                className=\"btn btn-link text-white\"\r\n                                onClick={this.handleMyPostsClick}>\r\n                                My Posts\r\n\t\t\t\t\t</button>\r\n                        </li>\r\n                    </ul>\r\n                    <button\r\n                        className=\"btn btn-link text-white\"\r\n                        onClick={this.handleLogoutClick}>\r\n                        Logout\r\n\t\t\t\t\t</button>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\n\r\nfunction PostCard(props) {\r\n    return (\r\n        <div className=\"card shadow mb-3 size\"><br />\r\n            <div align=\"center\">{props.user} Posted on <Moment format=\"YYYY/MM/DD\">{props.date}</Moment></div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title font-weight-bold\">\r\n                    {props.title}\r\n                    {/* <i\r\n\r\n                        className=\"fa text-violet fa-edit float-right clickable-icon\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#postUpdateModal\"\r\n                        onClick={() => {\r\n                            props.handleUpdatePostClick(props.postId)\r\n                        }}\r\n                    /> */}\r\n                </h4>\r\n                <hr />\r\n                <img src={`http://localhost:4000/post/download/${props.image}.png`} alt=\"No Image Preview\" class=\"centerAlign\" width=\"400\" height=\"200\" />\r\n                <p className=\"card-text\">{props.description}</p>\r\n                <button className=\"link-button\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#viewLikeModal\"\r\n\r\n                    title=\"View Likes\"\r\n                    onClick={() =>\r\n                        props.viewLikes(props.postId)\r\n                    }>{props.likes}&nbsp;likes</button>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <Link\r\n                            to={`issues/${props.postId}`}\r\n                            className=\"btn btn-violet btn-block shadow\"\r\n                            data-toggle=\"tooltip\"\r\n                            data-placement=\"bottom\"\r\n                            title=\"View Issues\">\r\n                            <i className=\"fas fa-eye mr-1\" />\r\n\t\t\t\t\t\t\tView Issues\r\n\t\t\t\t\t\t</Link>\r\n                    </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        {/* <button\r\n                            className=\"btn btn-block btn-color\"\r\n                            onClick={() =>\r\n                                props.handleLikePost(props.postId, localStorage.getItem('name'))\r\n                            }\r\n                            data-toggle=\"tooltip\"\r\n                            data-placement=\"bottom\"\r\n                            title=\"Likes\"> */}\r\n                        <div className=\"style-icon\">\r\n                            <i class=\"fas fa-heart clickable-icon\"\r\n                                onClick={() =>\r\n                                    props.handleLikePost(props.postId, localStorage.getItem('name'))\r\n                                } data-toggle=\"tooltip\"\r\n                                data-placement=\"bottom\"\r\n                                title=\"Likes\"\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        {/* </button> */}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react'\r\n\r\nfunction AddPostButton(props) {\r\n    return (\r\n        <span {...props}>\r\n            <button\r\n                className=\"btn btn-outline-violet pill-button text-violet shadow floatright\"\r\n                onClick={props.onClick}>\r\n                <i className=\"fa fa-plus mr-2\" /> Add Post\r\n\t\t\t</button>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default AddPostButton","import React from 'react'\r\n\r\nfunction AddPostModal(props) {\r\n    return (\r\n        <div\r\n            className=\"modal fade\"\r\n            id=\"addPostModal\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"addPostModal\"\r\n            aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"AddPostModalLabel\">\r\n                            Add New Post\r\n\t\t\t\t\t\t</h5>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"ml-2\">Title</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter Title of the Post\"\r\n                                onChange={props.handleTitleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"ml-2\">Content</label>\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter content of the Post\"\r\n                                onChange={props.handleDescriptionChange}\r\n                            />\r\n                        </div>\r\n                        <div\r\n\r\n                        >\r\n                            <label className=\"ml-2\">Post</label><br />\r\n                            <input type=\"file\"\r\n                                name=\"file\"\r\n                                accept=\"image/png, image/jpeg\" onChange={props.handleFileChange}></input>\r\n                        </div>\r\n                        {/* <div className=\"form-group\">\r\n                            <label className=\"ml-2\">Post</label>\r\n                            <input type=\"file\"\r\n                                className=\"form-control\"\r\n                                accept=\"image/png, image/jpeg\" onChange={props.handleFileChange} />\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-secondary\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={props.onCancel}>\r\n                            Cancel\r\n\t\t\t\t\t\t</button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            onClick={props.onConfirm}>\r\n                            Confirm\r\n\t\t\t\t\t\t</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPostModal","\r\nconst dotenv = require('dotenv');\r\ndotenv.config()\r\n\r\nconst config = {\r\n    apiURL: process.env.REACT_APP_API_URL\r\n}\r\n\r\nexport default config;","import axios from 'axios';\r\nimport config from '../config/config';\r\n\r\nfunction callAPI(method, url, options) {\r\n    var token = localStorage.getItem('token');\r\n    const axiosConfig = {\r\n        url,\r\n        method,\r\n        baseURL: config.apiURL,\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        ...options\r\n\r\n    }\r\n\r\n    return axios(axiosConfig)\r\n}\r\n\r\nexport default callAPI;","import React, { Component } from 'react';\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport PostCard from '../components/PostCard'\r\nimport AddPostButton from '../components/AddPostButton'\r\nimport AddPostModal from '../components/AddPostModal'\r\nimport callAPI from '../lib/axios'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\nclass PostView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            posts: [],\r\n            selectedPost: {},\r\n            likedUsersList: []\r\n        }\r\n        if (!localStorage.getItem('token')) {\r\n            window.location = '/#/login'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getAllPosts()\r\n    }\r\n    getAllPosts = async () => {\r\n        try {\r\n            const results = await callAPI('get', '/post/')\r\n            const { state: currentState } = this\r\n            currentState.posts = results.data.message\r\n            this.setState(currentState)\r\n        } catch (error) {\r\n            toast.error('An error Occured. Try Again')\r\n        }\r\n    }\r\n    handleDeletePost = async (postId) => {\r\n        try {\r\n            await callAPI('delete', `/post/${postId}`)\r\n            this.getAllPosts()\r\n            toast.success('Post Deleted')\r\n        } catch (error) {\r\n            toast.error('Post Cannot be Deleted')\r\n        }\r\n    }\r\n\r\n    handleUpdatePostClick = (postId) => {\r\n        const { state: currentState } = this\r\n        const filteredPosts = currentState.posts.filter((post) => {\r\n            return post._id === postId\r\n        })\r\n        currentState.selectedPost = filteredPosts[0]\r\n        this.setState(currentState)\r\n    }\r\n    handleLikePost = async (postId, name) => {\r\n        if (postId === '' && name === '') {\r\n            alert('Cannot proceed without username and/or password')\r\n        } else {\r\n            try {\r\n                const response = await callAPI('put', '/post/like', {\r\n                    data: {\r\n                        id: postId,\r\n                        username: name\r\n                    }\r\n                })\r\n                this.getAllPosts()\r\n                toast.success('Liked')\r\n\r\n            } catch (error) {\r\n                toast.error('Post Cannot be Liked!')\r\n            }\r\n        }\r\n    }\r\n    viewLikes = async (postId) => {\r\n        if (postId === '') {\r\n            alert('Cannot proceed without post Id')\r\n        } else {\r\n            try {\r\n                const result = await callAPI('get', `/post/viewlikes/${postId}`)\r\n                const { state: currentState } = this\r\n                currentState.likedUsersList = result.data.message\r\n                this.setState(currentState)\r\n                //alert(\"List of Users who liked tis Post\" + '\\n' + result.data.message)\r\n                // toast.success(\"Lists of users who liked\")\r\n            } catch (error) {\r\n                toast.error('Error')\r\n            }\r\n        }\r\n    }\r\n    _renderPostCards = () => {\r\n        try {\r\n            if (this.state.posts.length > 0) {\r\n                return (\r\n                    <div className=\"align\">\r\n\r\n                        {this.state.posts.map((post, idx) => (\r\n\r\n                            <div\r\n                                className=\"col-sm-12 col-md-12 col-lg-4 col-xl-3\"\r\n                                key={idx}>\r\n\r\n                                <PostCard\r\n                                    user={post.owner}\r\n                                    date={post.createdAt}\r\n                                    title={post.posttitle}\r\n                                    description={post.postcontent}\r\n                                    postId={post._id}\r\n                                    image={post.postimageid}\r\n                                    likes={post.likes}\r\n                                    handleLikePost={this.handleLikePost}\r\n                                    handleDeletePost={this.handleDeletePost}\r\n                                    handleUpdatePostClick={\r\n                                        this.handleUpdatePostClick\r\n                                    }\r\n                                    viewLikes={this.viewLikes}\r\n                                /><br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className=\"text-center\">\r\n                        <h3 className=\"text-danger\">\r\n                            <i className=\"fa fa-exclamation-circle mr-4\" />\r\n                            No Posts\r\n                        </h3>\r\n                    </div>\r\n                )\r\n            }\r\n        } catch (error) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"text-danger\">\r\n                        <i className=\"fa fa-exclamation-circle mr-4\" />\r\n                        No Posts\r\n                    </h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    handleTitleChange = (e) => {\r\n        const { state: currentState } = this\r\n        currentState.selectedPost.posttitle = e.target.value\r\n        this.setState(currentState)\r\n    }\r\n    handleDescriptionChange = (e) => {\r\n        const { state: currentState } = this\r\n        currentState.selectedPost.postcontent = e.target.value\r\n        this.setState(currentState)\r\n    }\r\n    handleFileChange = (e) => {\r\n        const { state: currentState } = this\r\n        currentState.selectedPost.file = e.target.files[0]\r\n        this.setState(currentState)\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.getAllPosts()\r\n    }\r\n\r\n    handleUpdate = async (postId) => {\r\n        try {\r\n            await callAPI('put', '/post', {\r\n                data:\r\n                    this.state.selectedPost\r\n                //{  id: postId,\r\n                // postcontent: this.selectedPost.postcontent,\r\n                // posttitle: this.selectedPost.posttitle}\r\n\r\n\r\n            })\r\n            toast.success('Post Updated')\r\n        } catch (error) {\r\n            toast.error('Error in Updating the post')\r\n        }\r\n        this.getAllPosts()\r\n    }\r\n    onConfirm = async () => {\r\n        try {\r\n            let formData = new FormData();\r\n            formData.append('file', this.state.selectedPost.file);\r\n            formData.append('postcontent', this.state.selectedPost.postcontent);\r\n            formData.append('posttitle', this.state.selectedPost.posttitle);\r\n            await callAPI('post', '/post', {\r\n                data: formData\r\n            })\r\n            toast.success('Post Created')\r\n\r\n            this.getAllPosts()\r\n        } catch (error) {\r\n            toast.error('Error in Creating Post')\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { state } = this\r\n        const { selectedPost } = state\r\n        return (\r\n            <div>\r\n\r\n                <NavBar />\r\n                <div className=\"m-5\">\r\n                    <ToastContainer />\r\n\r\n\r\n                    <div\r\n                        className=\"modal fade\"\r\n                        id=\"postUpdateModal\"\r\n                        tabIndex=\"-1\"\r\n                        role=\"dialog\"\r\n                        aria-labelledby=\"postUpdateModal\"\r\n                        aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5\r\n                                        className=\"modal-title\"\r\n                                        id=\"postUpdateModalLabel\">\r\n                                        Edit Post Details\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"close\"\r\n                                        data-dismiss=\"modal\"\r\n                                        aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"ml-2\">Title</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={selectedPost.posttitle}\r\n                                            onChange={this.handleTitleChange}\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Title of the Post\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"ml-2\">\r\n                                            Content\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            value={selectedPost.postcontent}\r\n                                            onChange={\r\n                                                this.handleDescriptionChange\r\n                                            }\r\n                                            placeholder=\"Enter Content of the Post\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-secondary\"\r\n                                        data-dismiss=\"modal\"\r\n                                        onClick={this.handleCancel}>\r\n                                        Cancel\r\n\t\t\t\t\t\t\t\t\t</button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={this.handleUpdate}>\r\n                                        Update\r\n\t\t\t\t\t\t\t\t\t</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div\r\n                        className=\"modal fade\"\r\n                        id=\"viewLikeModal\"\r\n                        tabIndex=\"-1\"\r\n                        role=\"dialog\"\r\n                        aria-labelledby=\"postUpdateModal\"\r\n                        aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5\r\n                                        className=\"modal-title\"\r\n                                        id=\"postUpdateModalLabel\">\r\n                                        People who liked this Post\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"close\"\r\n                                        data-dismiss=\"modal\"\r\n                                        aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n\r\n                                        {this.state.likedUsersList.map((user, idx) => (\r\n                                            <div>\r\n                                                {user}\r\n                                            </div>\r\n                                        ))}\r\n\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            data-dismiss=\"modal\"\r\n                                            onClick={this.handleCancel}>\r\n                                            Close\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this._renderPostCards()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostView;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\n\r\nfunction MyPostCard(props) {\r\n    return (\r\n        <div className=\"card shadow mb-3 size\"><br />\r\n\r\n\r\n            <div align=\"center\">{props.user} Posted on <Moment format=\"YYYY/MM/DD\">{props.date}</Moment></div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title font-weight-bold\">\r\n                    {props.title}\r\n\r\n                    <i\r\n\r\n                        className=\"fa text-violet fa-edit floatright clickable-icon\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#postUpdateModal\"\r\n                        onClick={() => {\r\n                            props.handleUpdatePostClick(props.postId)\r\n                        }}\r\n                    />\r\n                    <i className=\"fa fa-trash clickable-icon float-right\" onClick={() =>\r\n                        props.handleDeletePost(props.postId)\r\n                    }\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Delete post\" />\r\n                </h4>\r\n                <hr />\r\n                <img src={`http://localhost:4000/post/download/${props.image}.png`} alt=\"No Image Preview\" class=\"centerAlign\" width=\"400\" height=\"200\" />\r\n                <p className=\"card-text\">{props.description}</p>\r\n                <button className=\"link-button\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#viewLikeModal\"\r\n                    onClick={() =>\r\n                        props.viewLikes(props.postId)\r\n                    }>{props.likes}&nbsp;likes</button>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n\r\n                        <div className=\"style-icon\">\r\n                            <i class=\"fas fa-heart clickable-icon\"\r\n                                onClick={() =>\r\n                                    props.handleLikePost(props.postId, localStorage.getItem('name'))\r\n                                } data-toggle=\"tooltip\"\r\n                                data-placement=\"bottom\"\r\n                                title=\"Likes\"\r\n                            ></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPostCard","import React, { Component } from 'react';\r\nimport NavBar from '../components/NavBar'\r\nimport { moment } from 'moment'\r\n\r\nimport MyPostCard from '../components/MyPostCard'\r\nimport AddPostButton from '../components/AddPostButton'\r\nimport AddPostModal from '../components/AddPostModal'\r\nimport callAPI from '../lib/axios'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\nclass MyPostView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            posts: [],\r\n            selectedPost: {},\r\n            likedUsersList: [],\r\n            date: ''\r\n        }\r\n        if (!localStorage.getItem('token')) {\r\n            window.location = '/#/login'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getAllPosts()\r\n    }\r\n    getAllPosts = async () => {\r\n        try {\r\n            const name = localStorage.getItem('name')\r\n            const results = await callAPI('get', `/post/${name}`)\r\n            const { state: currentState } = this\r\n            currentState.posts = results.data.message\r\n            currentState.date = results.data.message.createdAt\r\n            this.setState(currentState)\r\n            console.log(results.data.message)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    handleDeletePost = async (postId) => {\r\n        try {\r\n            await callAPI('delete', `/post/${postId}`)\r\n            this.getAllPosts()\r\n            toast.success('Post Deleted')\r\n        } catch (error) {\r\n            toast.error('Post Cannot be Deleted')\r\n        }\r\n    }\r\n\r\n    handleUpdatePostClick = (postId) => {\r\n        const { state: currentState } = this\r\n        const filteredPosts = currentState.posts.filter((post) => {\r\n            return post._id === postId\r\n        })\r\n        currentState.selectedPost = filteredPosts[0]\r\n        this.setState(currentState)\r\n    }\r\n    handleLikePost = async (postId, name) => {\r\n        if (postId === '' && name === '') {\r\n            alert('Cannot proceed without username and/or password')\r\n        } else {\r\n            try {\r\n                const response = await callAPI('put', '/post/like', {\r\n                    data: {\r\n                        id: postId,\r\n                        username: name\r\n                    }\r\n                })\r\n                this.getAllPosts()\r\n                toast.success('Liked')\r\n\r\n            } catch (error) {\r\n                toast.error('Post Cannot be Liked!')\r\n            }\r\n        }\r\n    }\r\n    viewLikes = async (postId) => {\r\n        if (postId === '') {\r\n            alert('Cannot proceed without post Id')\r\n        } else {\r\n            try {\r\n                const result = await callAPI('get', `/post/viewlikes/${postId}`)\r\n                const { state: currentState } = this\r\n                currentState.likedUsersList = result.data.message\r\n                this.setState(currentState)\r\n                //alert(\"List of Users who liked tis Post\" + '\\n' + result.data.message)\r\n                // toast.success(\"Lists of users who liked\")\r\n            } catch (error) {\r\n                toast.error('Error')\r\n            }\r\n        }\r\n    }\r\n    _renderPostCards = () => {\r\n        try {\r\n            if (this.state.posts.length > 0) {\r\n                return (\r\n                    <div className=\"align\">\r\n\r\n                        {this.state.posts.map((post, idx) => (\r\n\r\n                            < div\r\n                                className=\"col-sm-12 col-md-12 col-lg-4 col-xl-3\"\r\n                                key={idx} >\r\n\r\n                                <MyPostCard\r\n                                    user={post.owner}\r\n                                    date={post.createdAt}\r\n                                    title={post.posttitle}\r\n                                    description={post.postcontent}\r\n                                    postId={post._id}\r\n                                    image={post.postimageid}\r\n                                    likes={post.likes}\r\n                                    handleLikePost={this.handleLikePost}\r\n                                    handleDeletePost={this.handleDeletePost}\r\n                                    handleUpdatePostClick={\r\n                                        this.handleUpdatePostClick\r\n                                    }\r\n                                    viewLikes={this.viewLikes}\r\n                                /><br />\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </div >\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className=\"text-center\">\r\n                        <h3 className=\"text-danger\">\r\n                            <i className=\"fa fa-exclamation-circle mr-4\" />\r\n                            No Posts\r\n                        </h3>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        catch (error) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"text-danger\">\r\n                        <i className=\"fa fa-exclamation-circle mr-4\" />\r\n                       Error in Loading Post!\r\n                    </h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    handleTitleChange = (e) => {\r\n        const { state: currentState } = this\r\n        currentState.selectedPost.posttitle = e.target.value\r\n        this.setState(currentState)\r\n    }\r\n    handleDescriptionChange = (e) => {\r\n        const { state: currentState } = this\r\n        currentState.selectedPost.postcontent = e.target.value\r\n        this.setState(currentState)\r\n    }\r\n    handleFileChange = (e) => {\r\n        const { state: currentState } = this\r\n        currentState.selectedPost.file = e.target.files[0]\r\n        this.setState(currentState)\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.getAllPosts()\r\n    }\r\n\r\n    handleUpdate = async (postId) => {\r\n        try {\r\n            await callAPI('put', '/post', {\r\n                data:\r\n                    this.state.selectedPost\r\n                //{  id: postId,\r\n                // postcontent: this.selectedPost.postcontent,\r\n                // posttitle: this.selectedPost.posttitle}\r\n\r\n\r\n            })\r\n            toast.success('Post Updated')\r\n        } catch (error) {\r\n            toast.error('Error in Updating the post')\r\n        }\r\n        this.getAllPosts()\r\n    }\r\n    onConfirm = async () => {\r\n        try {\r\n            let formData = new FormData();\r\n            formData.append('file', this.state.selectedPost.file);\r\n            formData.append('username', localStorage.getItem('name'))\r\n            formData.append('postcontent', this.state.selectedPost.postcontent);\r\n            formData.append('posttitle', this.state.selectedPost.posttitle);\r\n            await callAPI('post', '/post', {\r\n                data: formData\r\n            })\r\n            toast.success('Post Created')\r\n\r\n            this.getAllPosts()\r\n        } catch (error) {\r\n            toast.error('Error in Creating Post')\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { state } = this\r\n        const { selectedPost } = state\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <div className=\"d-flex justify-content-between align-items-center float mt-2 mb-5\">\r\n                    <AddPostButton\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#addPostModal\"\r\n                    />\r\n                </div>\r\n                <div className=\"m-5\">\r\n                    <ToastContainer />\r\n\r\n                    <AddPostModal\r\n                        onConfirm={this.onConfirm}\r\n                        onCancel={this.handleCancel}\r\n                        handleTitleChange={this.handleTitleChange}\r\n                        handleDescriptionChange={this.handleDescriptionChange}\r\n                        handleFileChange={this.handleFileChange}\r\n                    />\r\n\r\n                    <div\r\n                        className=\"modal fade\"\r\n                        id=\"postUpdateModal\"\r\n                        tabIndex=\"-1\"\r\n                        role=\"dialog\"\r\n                        aria-labelledby=\"postUpdateModal\"\r\n                        aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5\r\n                                        className=\"modal-title\"\r\n                                        id=\"postUpdateModalLabel\">\r\n                                        Edit Post Details\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"close\"\r\n                                        data-dismiss=\"modal\"\r\n                                        aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"ml-2\">Title</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={selectedPost.posttitle}\r\n                                            onChange={this.handleTitleChange}\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Title of the Post\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"ml-2\">\r\n                                            Content\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            value={selectedPost.postcontent}\r\n                                            onChange={\r\n                                                this.handleDescriptionChange\r\n                                            }\r\n                                            placeholder=\"Enter Content of the Post\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-secondary\"\r\n                                        data-dismiss=\"modal\"\r\n                                        onClick={this.handleCancel}>\r\n                                        Cancel\r\n\t\t\t\t\t\t\t\t\t</button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={this.handleUpdate}>\r\n                                        Update\r\n\t\t\t\t\t\t\t\t\t</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div\r\n                        className=\"modal fade\"\r\n                        id=\"viewLikeModal\"\r\n                        tabIndex=\"-1\"\r\n                        role=\"dialog\"\r\n                        aria-labelledby=\"postUpdateModal\"\r\n                        aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5\r\n                                        className=\"modal-title\"\r\n                                        id=\"postUpdateModalLabel\">\r\n                                        People who liked this Post\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"close\"\r\n                                        data-dismiss=\"modal\"\r\n                                        aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n\r\n                                        {this.state.likedUsersList.map((user, idx) => (\r\n                                            <div>\r\n                                                {user}\r\n                                            </div>\r\n                                        ))}\r\n\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-secondary\"\r\n                                            data-dismiss=\"modal\"\r\n                                            onClick={this.handleCancel}>\r\n                                            Close\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this._renderPostCards()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPostView;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport callAPI from '../lib/axios'\r\n\r\nexport default class LoginView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleLoginClick = async () => {\r\n        const { username, password } = this.state\r\n        if (username === '' && password === '') {\r\n            alert('Cannot proceed without username and/or password')\r\n        } else {\r\n            try {\r\n                const response = await callAPI('post', '/user/login', {\r\n                    data: {\r\n                        name: username,\r\n                        password\r\n                    }\r\n                })\r\n                console.log(response)\r\n                localStorage.setItem('token', response.data.jwttoken)\r\n                localStorage.setItem('name', response.data.name)\r\n                window.location = '/#/'\r\n            } catch (error) {\r\n                console.log('Error')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pt-5 login-bg text-white h-100\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"display-4\">Welcome to </div>\r\n                    <div className=\"display-1\"> PostIn</div>\r\n                    <h3>An One step solution to share your thoughts</h3>\r\n                    <div style={{ fontSize: 20 }} className=\"mt-5\">\r\n                        <div style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <input\r\n                                className=\"form-control text-center placeholder-colored\"\r\n                                placeholder=\"Enter your username\"\r\n                                onChange={(e) => {\r\n                                    const { state: currentState } = this\r\n                                    currentState.username = e.target.value\r\n                                    this.setState(currentState)\r\n                                }}></input>\r\n                        </div>\r\n                        <div\r\n                            className=\"mt-3\"\r\n                            style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control text-center placeholder-colored\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(e) => {\r\n                                    const { state: currentState } = this\r\n                                    currentState.password = e.target.value\r\n                                    this.setState(currentState)\r\n                                }}></input>\r\n                        </div>\r\n                        <div\r\n                            className=\"mt-3 rounded\"\r\n                            style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <button\r\n                                className=\"btn btn-primary w-100\"\r\n                                onClick={this.handleLoginClick}>\r\n                                Login\r\n            \t\t\t\t</button>\r\n                            <Link to=\"/register\" className=\"text-white\">\r\n                                Dont Have an Account? Sign Up\r\n            \t\t\t\t</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport callAPI from '../lib/axios'\r\n\r\nexport default class RegisterView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            file: null\r\n        }\r\n    }\r\n\r\n    handleRegisterClick = async () => {\r\n        const { username, password, email, file } = this.state\r\n        //console.log(file)\r\n        if (username === '' && password === '' && email === '') {\r\n            alert('Cannot proceed without username and/or password')\r\n        } else {\r\n            try {\r\n                let formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('name', username);\r\n                formData.append('password', password);\r\n                formData.append('email', email);\r\n                await callAPI('post', '/user', {\r\n                    data: formData\r\n                })\r\n                alert('New User created')\r\n            } catch (error) {\r\n                alert('An error occured')\r\n                console.log('Error')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pt-5 login-bg text-white h-100\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"display-4\">Register with </div>\r\n                    <div className=\"display-1\"> PostIn.</div>\r\n                    <h3>An One step solution to share your thoughts</h3>\r\n                    <div style={{ fontSize: 20 }} className=\"mt-5\">\r\n                        <div style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <input\r\n                                className=\"form-control text-center placeholder-colored\"\r\n                                placeholder=\"Enter your username\"\r\n                                onChange={(e) => {\r\n                                    const { state: currentState } = this\r\n                                    currentState.username = e.target.value\r\n                                    this.setState(currentState)\r\n                                }}></input>\r\n                        </div>\r\n                        <div\r\n                            className=\"mt-3\"\r\n                            style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control text-center placeholder-colored\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(e) => {\r\n                                    const { state: currentState } = this\r\n                                    currentState.password = e.target.value\r\n                                    this.setState(currentState)\r\n                                }}></input>\r\n                        </div>\r\n                        <div\r\n                            className=\"mt-3\"\r\n                            style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control text-center placeholder-colored\"\r\n                                placeholder=\"xx@email.com\"\r\n                                onChange={(e) => {\r\n                                    const { state: currentState } = this\r\n                                    currentState.email = e.target.value\r\n                                    this.setState(currentState)\r\n                                }}></input>\r\n                        </div>\r\n                        <div\r\n                            className=\"mt-3\"\r\n                            style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <input type=\"file\"\r\n                                name=\"file\"\r\n                                accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                                    const { state: currentState } = this\r\n                                    currentState.file = e.target.files[0]\r\n                                    this.setState(currentState)\r\n                                }}></input>\r\n                        </div>\r\n                        <div\r\n                            className=\"mt-3 rounded\"\r\n                            style={{ marginLeft: 600, marginRight: 600 }}>\r\n                            <button\r\n                                className=\"btn btn-primary w-100\"\r\n                                onClick={this.handleRegisterClick}>\r\n                                Sign Up\r\n\t\t\t\t\t\t\t</button>\r\n                            <Link to=\"/login\" className=\"text-white\">\r\n                                Login\r\n\t\t\t\t\t\t\t</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport PostView from './PostView'\r\nimport MyPostView from './MyPostView'\r\nimport LoginView from './LoginView'\r\nimport RegisterView from './RegisterView'\r\n\r\nclass RootView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <Route path=\"/login\" exact component={LoginView}></Route>\r\n                <Route path=\"/register\" exact component={RegisterView}></Route>\r\n                <Route path=\"/myposts\" exact component={MyPostView}></Route>\r\n                <Route path=\"/\" exact component={PostView}></Route>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RootView;","import React from 'react'\n\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport RootView from './views/RootView'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route path=\"/\" component={RootView}></Route>\n    </HashRouter>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}